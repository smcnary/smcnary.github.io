name: Portfolio Website CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  # Lint and validate HTML/CSS/JS
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install HTML/CSS/JS linters
        run: |
          npm install -g htmlhint
          npm install -g stylelint
          npm install -g eslint

      - name: Lint HTML files
        run: |
          htmlhint *.html assets/**/*.html || true

      - name: Lint CSS files
        run: |
          stylelint "assets/css/*.css" --fix || true

      - name: Lint JavaScript files
        run: |
          eslint "assets/js/*.js" --fix || true

  # Test website functionality
  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm install -g http-server
          npm install -g lighthouse

      - name: Start local server
        run: |
          http-server -p 8080 &
          sleep 5

      - name: Run Lighthouse audit
        run: |
          lighthouse http://localhost:8080 --output=json --output-path=./lighthouse-report.json --chrome-flags="--headless --no-sandbox"

      - name: Upload Lighthouse report
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report
          path: lighthouse-report.json

  # Build and optimize assets
  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm install -g html-minifier
          npm install -g clean-css-cli
          npm install -g uglify-js

      - name: Optimize assets
        run: |
          mkdir -p dist
          # Minify HTML files
          for file in *.html; do
            html-minifier --collapse-whitespace --remove-comments --minify-js --minify-css "$file" -o "dist/$file"
          done
          
          # Minify CSS files
          mkdir -p dist/assets/css
          for file in assets/css/*.css; do
            cleancss -o "dist/$file" "$file"
          done
          
          # Minify JS files
          mkdir -p dist/assets/js
          for file in assets/js/*.js; do
            uglifyjs "$file" -o "dist/$file"
          done
          
          # Copy other assets
          cp -r assets/images dist/assets/ || true
          cp -r assets/fonts dist/assets/ || true
          cp -r img dist/ || true

      - name: Upload optimized assets
        uses: actions/upload-artifact@v4
        with:
          name: optimized-website
          path: dist/

  # Security scan
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run security scan
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  # Performance monitoring
  performance:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm install -g lighthouse

      - name: Run performance audit
        run: |
          lighthouse https://smcnary.github.io --output=json --output-path=./performance-report.json --chrome-flags="--headless --no-sandbox"

      - name: Upload performance report
        uses: actions/upload-artifact@v4
        with:
          name: performance-report
          path: performance-report.json
